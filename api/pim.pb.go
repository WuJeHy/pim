// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.9
// source: api/pim.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserStatusEnumType int32

const (
	UserStatusEnumType_UserStatusEnumTypeUnknown UserStatusEnumType = 0
)

// Enum value maps for UserStatusEnumType.
var (
	UserStatusEnumType_name = map[int32]string{
		0: "UserStatusEnumTypeUnknown",
	}
	UserStatusEnumType_value = map[string]int32{
		"UserStatusEnumTypeUnknown": 0,
	}
)

func (x UserStatusEnumType) Enum() *UserStatusEnumType {
	p := new(UserStatusEnumType)
	*p = x
	return p
}

func (x UserStatusEnumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatusEnumType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pim_proto_enumTypes[0].Descriptor()
}

func (UserStatusEnumType) Type() protoreflect.EnumType {
	return &file_api_pim_proto_enumTypes[0]
}

func (x UserStatusEnumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatusEnumType.Descriptor instead.
func (UserStatusEnumType) EnumDescriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{0}
}

type UserTypeEnumType int32

const (
	UserTypeEnumType_UserTypeEnumTypeUnknown UserTypeEnumType = 0
)

// Enum value maps for UserTypeEnumType.
var (
	UserTypeEnumType_name = map[int32]string{
		0: "UserTypeEnumTypeUnknown",
	}
	UserTypeEnumType_value = map[string]int32{
		"UserTypeEnumTypeUnknown": 0,
	}
)

func (x UserTypeEnumType) Enum() *UserTypeEnumType {
	p := new(UserTypeEnumType)
	*p = x
	return p
}

func (x UserTypeEnumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserTypeEnumType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pim_proto_enumTypes[1].Descriptor()
}

func (UserTypeEnumType) Type() protoreflect.EnumType {
	return &file_api_pim_proto_enumTypes[1]
}

func (x UserTypeEnumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserTypeEnumType.Descriptor instead.
func (UserTypeEnumType) EnumDescriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{1}
}

//	数据包类型 类似 mod type  , sub type 用于定位类型的解析
//
// 这些都是通知的事件
type UpdateEventDataType_Type int32

const (
	UpdateEventDataType_Unknown        UpdateEventDataType_Type = 0
	UpdateEventDataType_ConnectSuccess UpdateEventDataType_Type = 1
	UpdateEventDataType_ConnectFail    UpdateEventDataType_Type = 2
	UpdateEventDataType_NewMessage     UpdateEventDataType_Type = 3
	UpdateEventDataType_KickDevice     UpdateEventDataType_Type = 4
	UpdateEventDataType_UpdateUserInfo UpdateEventDataType_Type = 5
	UpdateEventDataType_NewChatInfo    UpdateEventDataType_Type = 6
)

// Enum value maps for UpdateEventDataType_Type.
var (
	UpdateEventDataType_Type_name = map[int32]string{
		0: "Unknown",
		1: "ConnectSuccess",
		2: "ConnectFail",
		3: "NewMessage",
		4: "KickDevice",
		5: "UpdateUserInfo",
		6: "NewChatInfo",
	}
	UpdateEventDataType_Type_value = map[string]int32{
		"Unknown":        0,
		"ConnectSuccess": 1,
		"ConnectFail":    2,
		"NewMessage":     3,
		"KickDevice":     4,
		"UpdateUserInfo": 5,
		"NewChatInfo":    6,
	}
)

func (x UpdateEventDataType_Type) Enum() *UpdateEventDataType_Type {
	p := new(UpdateEventDataType_Type)
	*p = x
	return p
}

func (x UpdateEventDataType_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateEventDataType_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pim_proto_enumTypes[2].Descriptor()
}

func (UpdateEventDataType_Type) Type() protoreflect.EnumType {
	return &file_api_pim_proto_enumTypes[2]
}

func (x UpdateEventDataType_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateEventDataType_Type.Descriptor instead.
func (UpdateEventDataType_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{2, 0}
}

type LoginReq_LoginType int32

const (
	LoginReq_Unknown         LoginReq_LoginType = 0
	LoginReq_LoginByUsername LoginReq_LoginType = 1
	LoginReq_EmailCode       LoginReq_LoginType = 2
	LoginReq_MobileCode      LoginReq_LoginType = 3
)

// Enum value maps for LoginReq_LoginType.
var (
	LoginReq_LoginType_name = map[int32]string{
		0: "Unknown",
		1: "LoginByUsername",
		2: "EmailCode",
		3: "MobileCode",
	}
	LoginReq_LoginType_value = map[string]int32{
		"Unknown":         0,
		"LoginByUsername": 1,
		"EmailCode":       2,
		"MobileCode":      3,
	}
)

func (x LoginReq_LoginType) Enum() *LoginReq_LoginType {
	p := new(LoginReq_LoginType)
	*p = x
	return p
}

func (x LoginReq_LoginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_LoginType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pim_proto_enumTypes[3].Descriptor()
}

func (LoginReq_LoginType) Type() protoreflect.EnumType {
	return &file_api_pim_proto_enumTypes[3]
}

func (x LoginReq_LoginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginReq_LoginType.Descriptor instead.
func (LoginReq_LoginType) EnumDescriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{6, 0}
}

type LoginReq_PlatformType int32

const (
	LoginReq_UnknownPlatform LoginReq_PlatformType = 0
	LoginReq_Android         LoginReq_PlatformType = 1
	LoginReq_IOS             LoginReq_PlatformType = 2
	LoginReq_Windows         LoginReq_PlatformType = 3
	LoginReq_Darwin          LoginReq_PlatformType = 4
	LoginReq_Grpc            LoginReq_PlatformType = 5
	LoginReq_Web             LoginReq_PlatformType = 6
)

// Enum value maps for LoginReq_PlatformType.
var (
	LoginReq_PlatformType_name = map[int32]string{
		0: "UnknownPlatform",
		1: "Android",
		2: "IOS",
		3: "Windows",
		4: "Darwin",
		5: "Grpc",
		6: "Web",
	}
	LoginReq_PlatformType_value = map[string]int32{
		"UnknownPlatform": 0,
		"Android":         1,
		"IOS":             2,
		"Windows":         3,
		"Darwin":          4,
		"Grpc":            5,
		"Web":             6,
	}
)

func (x LoginReq_PlatformType) Enum() *LoginReq_PlatformType {
	p := new(LoginReq_PlatformType)
	*p = x
	return p
}

func (x LoginReq_PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pim_proto_enumTypes[4].Descriptor()
}

func (LoginReq_PlatformType) Type() protoreflect.EnumType {
	return &file_api_pim_proto_enumTypes[4]
}

func (x LoginReq_PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginReq_PlatformType.Descriptor instead.
func (LoginReq_PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{6, 1}
}

type SendMessageReq_MsgType int32

const (
	SendMessageReq_Unknown SendMessageReq_MsgType = 0 // proto3 必须从0开始
	SendMessageReq_Text    SendMessageReq_MsgType = 1
	SendMessageReq_Image   SendMessageReq_MsgType = 2
)

// Enum value maps for SendMessageReq_MsgType.
var (
	SendMessageReq_MsgType_name = map[int32]string{
		0: "Unknown",
		1: "Text",
		2: "Image",
	}
	SendMessageReq_MsgType_value = map[string]int32{
		"Unknown": 0,
		"Text":    1,
		"Image":   2,
	}
)

func (x SendMessageReq_MsgType) Enum() *SendMessageReq_MsgType {
	p := new(SendMessageReq_MsgType)
	*p = x
	return p
}

func (x SendMessageReq_MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendMessageReq_MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pim_proto_enumTypes[5].Descriptor()
}

func (SendMessageReq_MsgType) Type() protoreflect.EnumType {
	return &file_api_pim_proto_enumTypes[5]
}

func (x SendMessageReq_MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendMessageReq_MsgType.Descriptor instead.
func (SendMessageReq_MsgType) EnumDescriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{11, 0}
}

// 登录的Token
type TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *TokenReq) Reset() {
	*x = TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReq) ProtoMessage() {}

func (x *TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReq.ProtoReflect.Descriptor instead.
func (*TokenReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{0}
}

func (x *TokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type StreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID int64 `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"` // 使用int64 检索 可以比字符快且数据包更小
}

func (x *StreamReq) Reset() {
	*x = StreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReq) ProtoMessage() {}

func (x *StreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReq.ProtoReflect.Descriptor instead.
func (*StreamReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{1}
}

func (x *StreamReq) GetStreamID() int64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

// 推送的事件信息
type UpdateEventDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 这个body 需要通过不同的类型进行处理
	Body *anypb.Any `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *UpdateEventDataType) Reset() {
	*x = UpdateEventDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEventDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventDataType) ProtoMessage() {}

func (x *UpdateEventDataType) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventDataType.ProtoReflect.Descriptor instead.
func (*UpdateEventDataType) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateEventDataType) GetBody() *anypb.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type ConnectSuccessDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID int64 `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
}

func (x *ConnectSuccessDataType) Reset() {
	*x = ConnectSuccessDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectSuccessDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectSuccessDataType) ProtoMessage() {}

func (x *ConnectSuccessDataType) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectSuccessDataType.ProtoReflect.Descriptor instead.
func (*ConnectSuccessDataType) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectSuccessDataType) GetStreamID() int64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// 空数据 一样代表成功
type BaseOk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"` // 可以为空 特殊接口可以使用code 设置处理方法
}

func (x *BaseOk) Reset() {
	*x = BaseOk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseOk) ProtoMessage() {}

func (x *BaseOk) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseOk.ProtoReflect.Descriptor instead.
func (*BaseOk) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{5}
}

func (x *BaseOk) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *LoginReq             `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Platform LoginReq_PlatformType `protobuf:"varint,2,opt,name=Platform,proto3,enum=api.LoginReq_PlatformType" json:"Platform,omitempty"`
	Username string                `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string                `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	Code     string                `protobuf:"bytes,5,opt,name=Code,proto3" json:"Code,omitempty"` //  string VerityCode = 6 ; //验证码暂时不用
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{6}
}

func (x *LoginReq) GetType() *LoginReq {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *LoginReq) GetPlatform() LoginReq_PlatformType {
	if x != nil {
		return x.Platform
	}
	return LoginReq_UnknownPlatform
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{7}
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserInfoViewerDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int64              `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CreatedAt  int64              `protobuf:"varint,2,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	Username   string             `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Nick       string             `protobuf:"bytes,4,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Email      string             `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	UserStatus UserStatusEnumType `protobuf:"varint,6,opt,name=UserStatus,proto3,enum=api.UserStatusEnumType" json:"UserStatus,omitempty"`
	UserType   UserTypeEnumType   `protobuf:"varint,7,opt,name=UserType,proto3,enum=api.UserTypeEnumType" json:"UserType,omitempty"`
	Avatar     []byte             `protobuf:"bytes,8,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *UserInfoViewerDataType) Reset() {
	*x = UserInfoViewerDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoViewerDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoViewerDataType) ProtoMessage() {}

func (x *UserInfoViewerDataType) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoViewerDataType.ProtoReflect.Descriptor instead.
func (*UserInfoViewerDataType) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{8}
}

func (x *UserInfoViewerDataType) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserInfoViewerDataType) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserInfoViewerDataType) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfoViewerDataType) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserInfoViewerDataType) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfoViewerDataType) GetUserStatus() UserStatusEnumType {
	if x != nil {
		return x.UserStatus
	}
	return UserStatusEnumType_UserStatusEnumTypeUnknown
}

func (x *UserInfoViewerDataType) GetUserType() UserTypeEnumType {
	if x != nil {
		return x.UserType
	}
	return UserTypeEnumType_UserTypeEnumTypeUnknown
}

func (x *UserInfoViewerDataType) GetAvatar() []byte {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type GetUserInfoByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID int64 `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"` // 这是必须的
	UserID   int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserInfoByIDReq) Reset() {
	*x = GetUserInfoByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByIDReq) ProtoMessage() {}

func (x *GetUserInfoByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByIDReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoByIDReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserInfoByIDReq) GetStreamID() int64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *GetUserInfoByIDReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type AddUserToContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID int64  `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"` // 这是必须的
	UserID   int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Mobile   string `protobuf:"bytes,3,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	Note     string `protobuf:"bytes,4,opt,name=Note,proto3" json:"Note,omitempty"`
}

func (x *AddUserToContactReq) Reset() {
	*x = AddUserToContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToContactReq) ProtoMessage() {}

func (x *AddUserToContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToContactReq.ProtoReflect.Descriptor instead.
func (*AddUserToContactReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{10}
}

func (x *AddUserToContactReq) GetStreamID() int64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *AddUserToContactReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AddUserToContactReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AddUserToContactReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// // chat 规则
// // 0x01020304 1234  全局用户id
// // 0x01020304 0000  公网用户id
// // 0x00000000 1234  子网用户id
// // -0x0112345678 0000 公网普通群
// // -0x0100000000 1234 私网普通群
// // -0x1012345678 0000 公网超级群
// // -0x1000000000 1234 私网超级群
// ChatID           int64             `json:"chat_id"` // 普通用户正数 ， 群负数 超级群 -100开头
// MsgType          int               `json:"msg_type"`
// Attach           []byte            `json:"attach"`
// Body             []byte            `json:"body"`
// AtUser           []int64           `json:"at_user"`
// ReplyToMessageID int64             `json:"reply_to_message_id"`
// ReplyInChatID    int64             `json:"reply_in_chat_id"`
// Params           map[string]string `json:"params"`
type SendMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID         int64             `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"` // 这是必须的
	ChatID           int64             `protobuf:"varint,2,opt,name=ChatID,proto3" json:"ChatID,omitempty"`
	ReplyToMessageID int64             `protobuf:"varint,3,opt,name=ReplyToMessageID,proto3" json:"ReplyToMessageID,omitempty"`
	ReplyInChatID    int64             `protobuf:"varint,4,opt,name=ReplyInChatID,proto3" json:"ReplyInChatID,omitempty"`
	MessageText      string            `protobuf:"bytes,5,opt,name=MessageText,proto3" json:"MessageText,omitempty"`         // 这是文本消息 每个消息都会有文本的部分
	ImageContent     *MessageTypeImage `protobuf:"bytes,6,opt,name=ImageContent,proto3,oneof" json:"ImageContent,omitempty"` // 可选类型 当消息类型是图片的时候会有图片信息
	Params           map[string]string `protobuf:"bytes,7,rep,name=Params,proto3" json:"Params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{11}
}

func (x *SendMessageReq) GetStreamID() int64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *SendMessageReq) GetChatID() int64 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

func (x *SendMessageReq) GetReplyToMessageID() int64 {
	if x != nil {
		return x.ReplyToMessageID
	}
	return 0
}

func (x *SendMessageReq) GetReplyInChatID() int64 {
	if x != nil {
		return x.ReplyInChatID
	}
	return 0
}

func (x *SendMessageReq) GetMessageText() string {
	if x != nil {
		return x.MessageText
	}
	return ""
}

func (x *SendMessageReq) GetImageContent() *MessageTypeImage {
	if x != nil {
		return x.ImageContent
	}
	return nil
}

func (x *SendMessageReq) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type MessageTypeImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//  int64 RemoteFileID = 1 ; // 远程的id
	ImageBuffer []byte `protobuf:"bytes,1,opt,name=ImageBuffer,proto3" json:"ImageBuffer,omitempty"` // 先只有buffer
}

func (x *MessageTypeImage) Reset() {
	*x = MessageTypeImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageTypeImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeImage) ProtoMessage() {}

func (x *MessageTypeImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeImage.ProtoReflect.Descriptor instead.
func (*MessageTypeImage) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{12}
}

func (x *MessageTypeImage) GetImageBuffer() []byte {
	if x != nil {
		return x.ImageBuffer
	}
	return nil
}

type SendMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMessageResp) Reset() {
	*x = SendMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pim_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResp) ProtoMessage() {}

func (x *SendMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_pim_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResp.ProtoReflect.Descriptor instead.
func (*SendMessageResp) Descriptor() ([]byte, []int) {
	return file_api_pim_proto_rawDescGZIP(), []int{13}
}

var File_api_pim_proto protoreflect.FileDescriptor

var file_api_pim_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x70, 0x69, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x20, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x27, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0xbe, 0x01, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x7d, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x46, 0x61, 0x69, 0x6c, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x65,
	0x77, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x06, 0x22, 0x34, 0x0a, 0x16, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x22, 0x5b, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x1c,
	0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe6, 0x02, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x4c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x03, 0x22, 0x65,
	0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x61, 0x72, 0x77, 0x69, 0x6e,
	0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x72, 0x70, 0x63, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03,
	0x57, 0x65, 0x62, 0x10, 0x06, 0x22, 0x21, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x98, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x37, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x75, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x6f, 0x74, 0x65, 0x22, 0xaa, 0x03, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x3e, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x37, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x34, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x33, 0x0a, 0x12, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x2a,
	0x2f, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x32, 0x92, 0x03, 0x0a, 0x09, 0x50, 0x69, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4f,
	0x6b, 0x12, 0x26, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x6b, 0x12, 0x38, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pim_proto_rawDescOnce sync.Once
	file_api_pim_proto_rawDescData = file_api_pim_proto_rawDesc
)

func file_api_pim_proto_rawDescGZIP() []byte {
	file_api_pim_proto_rawDescOnce.Do(func() {
		file_api_pim_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pim_proto_rawDescData)
	})
	return file_api_pim_proto_rawDescData
}

var file_api_pim_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_pim_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_pim_proto_goTypes = []interface{}{
	(UserStatusEnumType)(0),        // 0: api.UserStatusEnumType
	(UserTypeEnumType)(0),          // 1: api.UserTypeEnumType
	(UpdateEventDataType_Type)(0),  // 2: api.UpdateEventDataType.Type
	(LoginReq_LoginType)(0),        // 3: api.LoginReq.LoginType
	(LoginReq_PlatformType)(0),     // 4: api.LoginReq.PlatformType
	(SendMessageReq_MsgType)(0),    // 5: api.SendMessageReq.MsgType
	(*TokenReq)(nil),               // 6: api.TokenReq
	(*StreamReq)(nil),              // 7: api.StreamReq
	(*UpdateEventDataType)(nil),    // 8: api.UpdateEventDataType
	(*ConnectSuccessDataType)(nil), // 9: api.ConnectSuccessDataType
	(*RegisterReq)(nil),            // 10: api.RegisterReq
	(*BaseOk)(nil),                 // 11: api.BaseOk
	(*LoginReq)(nil),               // 12: api.LoginReq
	(*LoginResp)(nil),              // 13: api.LoginResp
	(*UserInfoViewerDataType)(nil), // 14: api.UserInfoViewerDataType
	(*GetUserInfoByIDReq)(nil),     // 15: api.GetUserInfoByIDReq
	(*AddUserToContactReq)(nil),    // 16: api.AddUserToContactReq
	(*SendMessageReq)(nil),         // 17: api.SendMessageReq
	(*MessageTypeImage)(nil),       // 18: api.MessageTypeImage
	(*SendMessageResp)(nil),        // 19: api.SendMessageResp
	nil,                            // 20: api.SendMessageReq.ParamsEntry
	(*anypb.Any)(nil),              // 21: google.protobuf.Any
}
var file_api_pim_proto_depIdxs = []int32{
	21, // 0: api.UpdateEventDataType.body:type_name -> google.protobuf.Any
	12, // 1: api.LoginReq.Type:type_name -> api.LoginReq
	4,  // 2: api.LoginReq.Platform:type_name -> api.LoginReq.PlatformType
	0,  // 3: api.UserInfoViewerDataType.UserStatus:type_name -> api.UserStatusEnumType
	1,  // 4: api.UserInfoViewerDataType.UserType:type_name -> api.UserTypeEnumType
	18, // 5: api.SendMessageReq.ImageContent:type_name -> api.MessageTypeImage
	20, // 6: api.SendMessageReq.Params:type_name -> api.SendMessageReq.ParamsEntry
	6,  // 7: api.PimServer.UpdateEvent:input_type -> api.TokenReq
	10, // 8: api.PimServer.Register:input_type -> api.RegisterReq
	12, // 9: api.PimServer.Login:input_type -> api.LoginReq
	7,  // 10: api.PimServer.GetMyUserInfo:input_type -> api.StreamReq
	15, // 11: api.PimServer.GetUserInfoByID:input_type -> api.GetUserInfoByIDReq
	16, // 12: api.PimServer.AddUserToContact:input_type -> api.AddUserToContactReq
	17, // 13: api.PimServer.SendMessage:input_type -> api.SendMessageReq
	8,  // 14: api.PimServer.UpdateEvent:output_type -> api.UpdateEventDataType
	11, // 15: api.PimServer.Register:output_type -> api.BaseOk
	13, // 16: api.PimServer.Login:output_type -> api.LoginResp
	14, // 17: api.PimServer.GetMyUserInfo:output_type -> api.UserInfoViewerDataType
	14, // 18: api.PimServer.GetUserInfoByID:output_type -> api.UserInfoViewerDataType
	11, // 19: api.PimServer.AddUserToContact:output_type -> api.BaseOk
	19, // 20: api.PimServer.SendMessage:output_type -> api.SendMessageResp
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_pim_proto_init() }
func file_api_pim_proto_init() {
	if File_api_pim_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pim_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEventDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectSuccessDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseOk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoViewerDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageTypeImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pim_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_pim_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pim_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pim_proto_goTypes,
		DependencyIndexes: file_api_pim_proto_depIdxs,
		EnumInfos:         file_api_pim_proto_enumTypes,
		MessageInfos:      file_api_pim_proto_msgTypes,
	}.Build()
	File_api_pim_proto = out.File
	file_api_pim_proto_rawDesc = nil
	file_api_pim_proto_goTypes = nil
	file_api_pim_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PimServerClient is the client API for PimServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PimServerClient interface {
	//  通知事件模块
	UpdateEvent(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*UpdateEventDataType, error)
	//  鉴权模块
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*BaseOk, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	//   用户模块
	GetMyUserInfo(ctx context.Context, in *StreamReq, opts ...grpc.CallOption) (*UserInfoViewerDataType, error)
	GetUserInfoByID(ctx context.Context, in *GetUserInfoByIDReq, opts ...grpc.CallOption) (*UserInfoViewerDataType, error)
	AddUserToContact(ctx context.Context, in *AddUserToContactReq, opts ...grpc.CallOption) (*BaseOk, error)
	// 消息模块
	SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageResp, error)
}

type pimServerClient struct {
	cc grpc.ClientConnInterface
}

func NewPimServerClient(cc grpc.ClientConnInterface) PimServerClient {
	return &pimServerClient{cc}
}

func (c *pimServerClient) UpdateEvent(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*UpdateEventDataType, error) {
	out := new(UpdateEventDataType)
	err := c.cc.Invoke(ctx, "/api.PimServer/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pimServerClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*BaseOk, error) {
	out := new(BaseOk)
	err := c.cc.Invoke(ctx, "/api.PimServer/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pimServerClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/api.PimServer/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pimServerClient) GetMyUserInfo(ctx context.Context, in *StreamReq, opts ...grpc.CallOption) (*UserInfoViewerDataType, error) {
	out := new(UserInfoViewerDataType)
	err := c.cc.Invoke(ctx, "/api.PimServer/GetMyUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pimServerClient) GetUserInfoByID(ctx context.Context, in *GetUserInfoByIDReq, opts ...grpc.CallOption) (*UserInfoViewerDataType, error) {
	out := new(UserInfoViewerDataType)
	err := c.cc.Invoke(ctx, "/api.PimServer/GetUserInfoByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pimServerClient) AddUserToContact(ctx context.Context, in *AddUserToContactReq, opts ...grpc.CallOption) (*BaseOk, error) {
	out := new(BaseOk)
	err := c.cc.Invoke(ctx, "/api.PimServer/AddUserToContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pimServerClient) SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageResp, error) {
	out := new(SendMessageResp)
	err := c.cc.Invoke(ctx, "/api.PimServer/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PimServerServer is the server API for PimServer service.
type PimServerServer interface {
	//  通知事件模块
	UpdateEvent(context.Context, *TokenReq) (*UpdateEventDataType, error)
	//  鉴权模块
	Register(context.Context, *RegisterReq) (*BaseOk, error)
	Login(context.Context, *LoginReq) (*LoginResp, error)
	//   用户模块
	GetMyUserInfo(context.Context, *StreamReq) (*UserInfoViewerDataType, error)
	GetUserInfoByID(context.Context, *GetUserInfoByIDReq) (*UserInfoViewerDataType, error)
	AddUserToContact(context.Context, *AddUserToContactReq) (*BaseOk, error)
	// 消息模块
	SendMessage(context.Context, *SendMessageReq) (*SendMessageResp, error)
}

// UnimplementedPimServerServer can be embedded to have forward compatible implementations.
type UnimplementedPimServerServer struct {
}

func (*UnimplementedPimServerServer) UpdateEvent(context.Context, *TokenReq) (*UpdateEventDataType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedPimServerServer) Register(context.Context, *RegisterReq) (*BaseOk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedPimServerServer) Login(context.Context, *LoginReq) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedPimServerServer) GetMyUserInfo(context.Context, *StreamReq) (*UserInfoViewerDataType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyUserInfo not implemented")
}
func (*UnimplementedPimServerServer) GetUserInfoByID(context.Context, *GetUserInfoByIDReq) (*UserInfoViewerDataType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfoByID not implemented")
}
func (*UnimplementedPimServerServer) AddUserToContact(context.Context, *AddUserToContactReq) (*BaseOk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserToContact not implemented")
}
func (*UnimplementedPimServerServer) SendMessage(context.Context, *SendMessageReq) (*SendMessageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterPimServerServer(s *grpc.Server, srv PimServerServer) {
	s.RegisterService(&_PimServer_serviceDesc, srv)
}

func _PimServer_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).UpdateEvent(ctx, req.(*TokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PimServer_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PimServer_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PimServer_GetMyUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).GetMyUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/GetMyUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).GetMyUserInfo(ctx, req.(*StreamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PimServer_GetUserInfoByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).GetUserInfoByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/GetUserInfoByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).GetUserInfoByID(ctx, req.(*GetUserInfoByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PimServer_AddUserToContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserToContactReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).AddUserToContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/AddUserToContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).AddUserToContact(ctx, req.(*AddUserToContactReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PimServer_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PimServerServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PimServer/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PimServerServer).SendMessage(ctx, req.(*SendMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PimServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PimServer",
	HandlerType: (*PimServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateEvent",
			Handler:    _PimServer_UpdateEvent_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _PimServer_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _PimServer_Login_Handler,
		},
		{
			MethodName: "GetMyUserInfo",
			Handler:    _PimServer_GetMyUserInfo_Handler,
		},
		{
			MethodName: "GetUserInfoByID",
			Handler:    _PimServer_GetUserInfoByID_Handler,
		},
		{
			MethodName: "AddUserToContact",
			Handler:    _PimServer_AddUserToContact_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _PimServer_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/pim.proto",
}
